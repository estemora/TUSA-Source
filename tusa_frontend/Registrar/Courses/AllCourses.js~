import React, { useState, useEffect } from 'react';
import axios from 'axios';
import '../tusastyles.css'; 
import './coursesstyles.css';
import NavBar from '../NavBar';
import Header from '../Header';
import { Link } from 'react-router-dom';

function AllCourses() {
    const [courses, setCourses] = useState([]);
    const [username, setUsername] = useState('');
    const [students, setStudents] = useState([]);

    useEffect(() => {
        const cookieString = document.cookie;
        console.log('Cookies:', cookieString);

        const cookies = cookieString.split('; ').reduce((acc, curr) => {
            const [key, value] = curr.split('=');
            acc[key] = value;
            return acc;
        }, {});

        const { jwt, username } = cookies;

        if (jwt && username) {
            setUsername(username);
        }
    }, []);

    useEffect(() => {
        if (username) {
            console.log('Username:', username);
            fetchCourses(username);
        }
    }, [username]);

	const fetchCourses = async (username) => {
		try {
		    const response = await axios.get(`http://www.cs.transy.edu/TUSA/js-login/front/build/showCourses.cgi?username=${username}`);
		    const url = `http://www.cs.transy.edu/TUSA/js-login/front/build/showCourses.cgi?username=${username}`;
		    console.log('url:', url.data); 
		  console.log('Response:', response.data); 
		  const courseTitles = response.data;
		  console.log('Course Titles:', courseTitles); 
	  
		  setCourses(courseTitles);
	  
		} catch (error) {
		  console.error('Error fetching courses taken:', error);
		}
	};

    const showStudents = async (courseTitle) => {
	try {
	    	  const response = await axios.get(`http://www.cs.transy.edu/TUSA/js-login/front/build/showStudents.cgi?courseTitle=${courseTitle}`);
		  console.log('Response:', response.data); 
		  const studentsEnrolled = response.data;
		  console.log('Students Enrolled:', studentsEnrolled); 
	  
		  setStudents(studentsEnrolled);
	    
	} catch (error) {
	    console.error('Error fetching students enrolled:', error);
	}
    };

    return (
        <div>
            <Header />
            <div className="below-nav">
                <NavBar />
                <main>
                    <section className="title">
                        <p className="title-text"> MY COURSES </p>
                    </section>
                    <Link to="/professor-add-my-courses" className="add-course-button">
                        + Add My Courses
                    </Link> <br /><br />
		    <div className = "add-courses-section">
			
			{courses.length > 0 ? (
			    <div>
				{courses.map((courseTitle, index) => (
				    <div onClick={() => showStudents(courseTitle)} key={index}>
					{courseTitle}
				    </div> 
				))}
				</div>
			    ) : (
				<p> No Current Courses </p>
			    )}
		    </div>
                    <br /><br />
		    <div>
			<a>Students Enrolled:</a>
                        {students.length > 0 ? (
			    <ul>
				{students.map((student, index) => (
				    <li key={index}>{student}</li>
				))}
			    </ul>
			    ) : (
        <p>No students enrolled</p>
    )}
                    </div>
                </main>
            </div>
        </div>
    );
}

export default AllCourses;

